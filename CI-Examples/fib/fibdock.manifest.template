# Copyright (C) 2023 Gramine contributors
# SPDX-License-Identifier: BSD-3-Clause

# Change the entrypoint to the container path
libos.entrypoint = "/bin/bash"

# Adjust library paths for container environment
loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu:/usr/lib:/usr/lib/x86_64-linux-gnu"
loader.env.PATH = "/bin:/usr/bin"
loader.insecure__use_cmdline_argv = true

# Mount points adjusted for container filesystem
fs.mounts = [
   { path = "/lib", uri = "file:/lib" },
   { path = "/lib/x86_64-linux-gnu", uri = "file:/lib/x86_64-linux-gnu" },
   { path = "/usr/lib", uri = "file:/usr/lib" },
   { path = "/usr/lib/x86_64-linux-gnu", uri = "file:/usr/lib/x86_64-linux-gnu" },
   { path = "/bin", uri = "file:/bin" },
   { path = "/usr/bin", uri = "file:/usr/bin" },
   { path = "/tmp", uri = "file:/tmp" },
   { path = "/scripts", uri = "file:/app/scripts" },  # Assuming scripts will be in /app/scripts in container
   { path = "/home/user/.cargo", uri = "file:/home/user/.cargo" }  # Adjust user directory as needed
]

# Keep debug mode for development
sgx.debug = true
sgx.edmm_enable = false  # You can make this configurable via build arg if needed
sgx.enclave_size = "8G"
sgx.max_threads = 16

# Adjust trusted files paths for container
sgx.trusted_files = [
  "file:/bin/",
  "file:/usr/bin/",
  "file:/lib/",
  "file:/lib/x86_64-linux-gnu/",
  "file:/usr/lib/",
  "file:/usr/lib/x86_64-linux-gnu/",
  "file:/app/scripts/fibonacci",
  "file:/app/scripts/riscv32im-succinct-zkvm-elf",
  "file:/app/scripts/bash_test.sh"
]

# Adjust allowed files paths for container
sgx.allowed_files = [
   "file:/app/scripts/",
   "file:/dev/stdout",
   "file:/dev/stderr",
   "file:/dev/null",
   "file:/dev/urandom",
   "file:/app/scripts/testdir/",
   "file:/tmp/",
   "file:/home/user/.cargo/",
   "file:/app",
   "file:/app/"
]